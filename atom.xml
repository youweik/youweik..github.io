<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>无为</title>
  <subtitle>无为胜有为</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://longyouwei.com/"/>
  <updated>2017-04-27T14:56:23.825Z</updated>
  <id>http://longyouwei.com/</id>
  
  <author>
    <name>youwei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo+github搭建个人博客</title>
    <link href="http://longyouwei.com/2017/04/25/hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://longyouwei.com/2017/04/25/hexo-github搭建个人博客/</id>
    <published>2017-04-25T15:21:36.000Z</published>
    <updated>2017-04-27T14:56:23.825Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-概序"><a href="#1-概序" class="headerlink" title="1.概序"></a>1.概序</h3><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页</p><ul><li>该教程默许你有基本的计算机基础知识</li><li>该教程默许你会基本的markdowm语法，如果还不熟悉，不要着急，<a href="http://www.jianshu.com/p/q81RER/" target="_blank" rel="external">赶快去看一下吧</a></li></ul><p>该教程一些词汇如下<br><code>站点配置文件</code>：你博客目录下面的<code>_config.yml</code>文件<br><code>主题配置文件</code>：你博客目录下面的主题文件夹中的<code>_config.yml</code>文件，例如我的就是<code>/blog/themes/next/_config.yml</code></p><hr><h3 id="2-必要的准备条件"><a href="#2-必要的准备条件" class="headerlink" title="2.必要的准备条件"></a>2.必要的准备条件</h3><ul><li>你的pc上面必须安装了node.js和git</li><li>一个github账号</li><li>一个独立的个人域名（如果自己需要解析到自己的域名上面的话）</li><li>你需要有一个合适的文本编辑器，推荐使用<a href="http://www.sublimetext.com/" target="_blank" rel="external">sublime text</a>，轻量级，界面美观，插件丰富<a id="more"></a></li></ul><hr><h3 id="3-安装node-js和git"><a href="#3-安装node-js和git" class="headerlink" title="3.安装node.js和git"></a>3.安装node.js和git</h3><p>去node的<a href="https://nodejs.org/en/" target="_blank" rel="external">官网</a>下载LTS长期稳定版本<br>去git的官网下载<a href="https://git-scm.com/downloads" target="_blank" rel="external">git</a><br>一步一步安装，直到出现以下就代表安装成功了：<br><img src="http://upload-images.jianshu.io/upload_images/5320146-060ab5d08242324f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="cmd"></p><hr><h3 id="4-安装hexo"><a href="#4-安装hexo" class="headerlink" title="4.安装hexo"></a>4.安装hexo</h3><h4 id="4-1全局安装hexo"><a href="#4-1全局安装hexo" class="headerlink" title="4.1全局安装hexo"></a>4.1全局安装hexo</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-cli</div></pre></td></tr></table></figure><p>如果出现以下界面，证明hexo安装成功了<br><img src="http://upload-images.jianshu.io/upload_images/5320146-a849e190826ffd05.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="hexo"></p><h4 id="4-2新建博客"><a href="#4-2新建博客" class="headerlink" title="4.2新建博客"></a>4.2新建博客</h4><p>在自己电脑合适的地方新建一个文件夹（以我的电脑<code>f:\hexo</code>文件为例），cd到该目录输入以下<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init blog</div></pre></td></tr></table></figure><p></p><p>这段代码可能需要那么几分钟，不要着急，毕竟我大天朝有中国特色的防火墙。<br>安装完成之后cd到blog目录，输入以下命令：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server -p 5000</div></pre></td></tr></table></figure><p></p><p>打开浏览器输入: <a href="http://localhost:5000" target="_blank" rel="external">http://localhost:5000</a>（如果直接输入<code>hexo server</code>,就是默认的4000端口），看到如下界面就代表安装成功了<br><img src="http://upload-images.jianshu.io/upload_images/5320146-f66d6f24f7ba34e4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><h4 id="4-3新建一篇文章吧"><a href="#4-3新建一篇文章吧" class="headerlink" title="4.3新建一篇文章吧"></a>4.3新建一篇文章吧</h4><p>在终端输入以下指令<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new 你好世界</div></pre></td></tr></table></figure><p></p><p>这时，你的blog目录下的<code>/source/_post/</code> 文件夹会出现一个<code>你好世界.md</code>的文件，用你喜欢的文本编辑器编辑，保存，然后刷新浏览器，看看效果吧<br><img src="http://upload-images.jianshu.io/upload_images/5320146-2c2998b497d5fd28.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/5320146-f5ad40fe5aa9cea5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/5320146-e098a3c0ab010a06.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><hr><h3 id="5-安装一个合适的主题（非必要）"><a href="#5-安装一个合适的主题（非必要）" class="headerlink" title="5.安装一个合适的主题（非必要）"></a>5.安装一个合适的主题（非必要）</h3><p>博客虽然跑起来了，但是不符合天朝的审美观，现在我们就可以安装一个合适的主题，毕竟逼格也是很重要的。我们以<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">next 主题</a>为例<br>在博客目录运行以下指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure><p>这个操作可能要下载几分钟，这里忍不住要吐槽我大天朝的防火墙。下载完成之后，编辑<code>站点配置文件</code>。搜索‘theme’，将theme改为next</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Extensions</div><div class="line">## Plugins: https://hexo.io/plugins/</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line">theme: next</div></pre></td></tr></table></figure><p>修改完之后，重启服务（在终端按ctrl+C,然后运行hexo server指令），刷新浏览器，看看效果吧<br><img src="http://upload-images.jianshu.io/upload_images/5320146-bb37d7c5e531683d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><hr><h3 id="6-关联Hexo与github-page"><a href="#6-关联Hexo与github-page" class="headerlink" title="6.关联Hexo与github page"></a>6.关联Hexo与github page</h3><h4 id="6-1新建一个github代码仓库"><a href="#6-1新建一个github代码仓库" class="headerlink" title="6.1新建一个github代码仓库"></a>6.1新建一个github代码仓库</h4><p>在你的github界面新建一个名称为yourname.github.io的repo<br><img src="http://upload-images.jianshu.io/upload_images/5320146-ea2d2fcd8de9035e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><em>注意：比如我的github名称是test，这里你就填 test.github.io；如果你的名字是test1，那你就填 test1.github.io</em></p><h4 id="6-3配置git和ssh和密钥"><a href="#6-3配置git和ssh和密钥" class="headerlink" title="6.3配置git和ssh和密钥"></a>6.3配置git和ssh和密钥</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot;yourname&quot;</div><div class="line">git config --global user.email &quot;yourname@email.com&quot;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;yourname@email.com&quot;</div></pre></td></tr></table></figure><p>具体教程可以查看<a href="http://blog.csdn.net/gdutxiaoxu/article/details/53573399" target="_blank" rel="external">一些教程</a></p><h4 id="6-4关联github"><a href="#6-4关联github" class="headerlink" title="6.4关联github"></a>6.4关联github</h4><p>编辑<code>站点配置文件</code>找到Deployment，做以下修改<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># Deployment</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: git@github.com:yourname/yourname.github.io.git # 输入你的github地址即可</div><div class="line">  branch: master</div></pre></td></tr></table></figure><p></p><h4 id="6-4发布到github"><a href="#6-4发布到github" class="headerlink" title="6.4发布到github"></a>6.4发布到github</h4><p>先安装一个扩展插件插件<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure><p></p><p>然后运行以下指令<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d -g</div></pre></td></tr></table></figure><p></p><p>发布成功之后，访问你的地址：yourname.github.io吧</p><hr><h3 id="7-添加解析到自己域名"><a href="#7-添加解析到自己域名" class="headerlink" title="7.添加解析到自己域名"></a>7.添加解析到自己域名</h3><p>在你的yourname.github.io项目中配置如下<br><img src="http://upload-images.jianshu.io/upload_images/5320146-21348d9f580b490c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/5320146-e6668ccddd227f16.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>在你购买域名服务商的后台添加几条解析记录，以阿里云为例<br><img src="http://upload-images.jianshu.io/upload_images/5320146-abb1c8b31bfb3dd6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/5320146-299e8d9035599b84.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>如果不出意外的话，过几分钟，直接访问你的域名地址就可以正常访问了</p><hr><h3 id="8-其他"><a href="#8-其他" class="headerlink" title="8.其他"></a>8.其他</h3><h4 id="如果在npm-install中出现安装非常慢的情况，建议使用淘宝的cnpm"><a href="#如果在npm-install中出现安装非常慢的情况，建议使用淘宝的cnpm" class="headerlink" title="如果在npm install中出现安装非常慢的情况，建议使用淘宝的cnpm"></a>如果在npm install中出现安装非常慢的情况，建议使用淘宝的cnpm</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure><p>然后使用<code>cnpm install</code>指令即可</p><h4 id="博客基本配置"><a href="#博客基本配置" class="headerlink" title="博客基本配置"></a>博客基本配置</h4><p>编辑<code>站点配置文件</code>，找到‘site’<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># Site</div><div class="line">title: 博客标题</div><div class="line">subtitle: 博客副标题</div><div class="line">description: 自己的描述</div><div class="line">author: 作者名称</div><div class="line">language: zh-Hans # 网站语言</div><div class="line">timezone: Asia/Shanghai # 网站时区</div></pre></td></tr></table></figure><p></p><h4 id="增加打赏"><a href="#增加打赏" class="headerlink" title="增加打赏"></a>增加打赏</h4><p>编辑<code>主题配置文件</code>，找到‘reward_comment’<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！</div><div class="line">wechatpay: /images/wechat.jpg</div><div class="line">alipay: /images/alipay.jpg</div></pre></td></tr></table></figure><p></p><p>然后将你的支护宝和微信的付款码图片放在主题目录的<code>/source/images/</code>文件夹下面</p><h4 id="增加评论系统"><a href="#增加评论系统" class="headerlink" title="增加评论系统"></a>增加评论系统</h4><p>现在有两个选择：<a href="http://dev.duoshuo.com/" target="_blank" rel="external">多说</a>，<a href="https://disqus.com" target="_blank" rel="external">Disqus</a>。由于多说即将关闭，为了博客的逼格，所以以Disqus为例<br>你要注册一个Disqus账号，拿到你disqus的disqus_shortname。然后编辑<code>主题配置文件</code>，找到’disqus_shortname’<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Disqus</div><div class="line">disqus_shortname: your_disqus_shortname</div><div class="line"># Hypercomments</div><div class="line">#hypercomments_id:</div></pre></td></tr></table></figure><p></p><p><strong>注意：有些next主题和本人版本不同，可能配置的选项有所不同，但是大部分都大同小异，大家可以多上网折腾以下</strong></p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><ol><li><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">hexo 官方文档</a></li><li><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">next 主题官网文档</a></li><li><a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="external">一些教程</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-概序&quot;&gt;&lt;a href=&quot;#1-概序&quot; class=&quot;headerlink&quot; title=&quot;1.概序&quot;&gt;&lt;/a&gt;1.概序&lt;/h3&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页&lt;/p&gt;&lt;ul&gt;&lt;li&gt;该教程默许你有基本的计算机基础知识&lt;/li&gt;&lt;li&gt;该教程默许你会基本的markdowm语法，如果还不熟悉，不要着急，&lt;a href=&quot;http://www.jianshu.com/p/q81RER/&quot;&gt;赶快去看一下吧&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;该教程一些词汇如下&lt;br&gt;&lt;code&gt;站点配置文件&lt;/code&gt;：你博客目录下面的&lt;code&gt;_config.yml&lt;/code&gt;文件&lt;br&gt;&lt;code&gt;主题配置文件&lt;/code&gt;：你博客目录下面的主题文件夹中的&lt;code&gt;_config.yml&lt;/code&gt;文件，例如我的就是&lt;code&gt;/blog/themes/next/_config.yml&lt;/code&gt;&lt;/p&gt;&lt;hr&gt;&lt;h3 id=&quot;2-必要的准备条件&quot;&gt;&lt;a href=&quot;#2-必要的准备条件&quot; class=&quot;headerlink&quot; title=&quot;2.必要的准备条件&quot;&gt;&lt;/a&gt;2.必要的准备条件&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;你的pc上面必须安装了node.js和git&lt;/li&gt;&lt;li&gt;一个github账号&lt;/li&gt;&lt;li&gt;一个独立的个人域名（如果自己需要解析到自己的域名上面的话）&lt;/li&gt;&lt;li&gt;你需要有一个合适的文本编辑器，推荐使用&lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;sublime text&lt;/a&gt;，轻量级，界面美观，插件丰富
    
    </summary>
    
    
      <category term="js" scheme="http://longyouwei.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>js获取菲波那契数列的第N个元素</title>
    <link href="http://longyouwei.com/2017/03/25/js%E8%8E%B7%E5%8F%96%E8%8F%B2%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%E7%9A%84%E7%AC%ACN%E4%B8%AA%E5%85%83%E7%B4%A0/"/>
    <id>http://longyouwei.com/2017/03/25/js获取菲波那契数列的第N个元素/</id>
    <published>2017-03-24T17:31:15.000Z</published>
    <updated>2017-04-27T15:06:20.940Z</updated>
    
    <content type="html"><![CDATA[<h4 id="概序"><a href="#概序" class="headerlink" title="概序"></a>概序</h4><p><a href="http://baike.baidu.com/link?url=ef8VHJvyil7_nseAEM0WAAakbHfNbNZdWGe3JftuwxsTFcsfbwdNzTB-Lhl2LOwdOV-M5ixzxMEWFRlfw9qWlwo51mmA8-moGCaaFgvP0NOxdVSspc95wfvUasv5_1EEAbrz_FAeT5fdeT-3P7c2Ea" target="_blank" rel="external">菲波那契数列</a>，大致可以描叙为a(n) = a(n-1) + a(n-2) (a &gt; 2)。类似于这样<code>[1, 1, 2, 3, 5, 8, 13 ...]</code>，下面我们用js来实现一下：</p><hr><h4 id="1-递归"><a href="#1-递归" class="headerlink" title="1.递归"></a>1.递归</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</div><div class="line">   <span class="keyword">if</span> (n === <span class="number">1</span> || n === <span class="number">2</span>) &#123;</div><div class="line">       <span class="keyword">return</span> <span class="number">1</span></div><div class="line">   &#125; <span class="keyword">else</span> &#123;</div><div class="line">       <span class="keyword">return</span> a(n - <span class="number">1</span>) + a(n - <span class="number">2</span>)</div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.time(<span class="string">'a（44）'</span>)</div><div class="line"><span class="built_in">console</span>.log(a(<span class="number">44</span>))</div><div class="line"><span class="built_in">console</span>.timeEnd(<span class="string">'a（44）'</span>)</div></pre></td></tr></table></figure><p>以上我们可以比较清晰的看出代码的思路，但是这种方法有一个致命的缺点：效率太差！</p><p><img src="http://images2015.cnblogs.com/blog/604467/201701/604467-20170114150610697-767833320.png" alt="image"></p><p>执行到第44个的时候，已经不能接受了。需要5s多。那我们再来改进一下:<br><a id="more"></a></p><h4 id="2-闭包-缓存"><a href="#2-闭包-缓存" class="headerlink" title="2.闭包+缓存"></a>2.闭包+缓存</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> b = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">   <span class="keyword">var</span> cache = &#123;</div><div class="line">       <span class="number">1</span>: <span class="number">1</span>,</div><div class="line">       <span class="number">2</span>: <span class="number">1</span></div><div class="line">   &#125;</div><div class="line">   <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</div><div class="line">       <span class="keyword">if</span> (cache[n]) &#123;</div><div class="line">           <span class="keyword">return</span> cache[n]</div><div class="line">       &#125; <span class="keyword">else</span> &#123;</div><div class="line">           cache[n - <span class="number">1</span>] = b(n - <span class="number">1</span>)</div><div class="line">           cache[n - <span class="number">2</span>] = b(n - <span class="number">2</span>)</div><div class="line">           <span class="keyword">return</span> cache[n - <span class="number">1</span>] + cache[n - <span class="number">2</span>]</div><div class="line">       &#125;</div><div class="line">   &#125;</div><div class="line">&#125;)()</div><div class="line"></div><div class="line"><span class="built_in">console</span>.time(<span class="string">'b（1200）'</span>)</div><div class="line"><span class="built_in">console</span>.log(b(<span class="number">1200</span>))</div><div class="line"><span class="built_in">console</span>.timeEnd(<span class="string">'b（1200）'</span>)</div></pre></td></tr></table></figure><p>将每一步计算出来的值，保存到了缓存中。效率提升了许多：<br><img src="http://images2015.cnblogs.com/blog/604467/201701/604467-20170114151042556-1772264773.png" alt="image"></p><h4 id="3-直接计算出该数列的值得数组，然后再从数组中取值"><a href="#3-直接计算出该数列的值得数组，然后再从数组中取值" class="headerlink" title="3.直接计算出该数列的值得数组，然后再从数组中取值"></a>3.直接计算出该数列的值得数组，然后再从数组中取值</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> c = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</div><div class="line">   <span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">1</span>]</div><div class="line">   <span class="keyword">if</span> (n === <span class="number">1</span> || n === <span class="number">2</span>) &#123;</div><div class="line">       <span class="keyword">return</span> <span class="number">1</span></div><div class="line">   &#125;</div><div class="line">   <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">2</span>; i &lt; n; i ++) &#123;</div><div class="line">       arr[i] = arr[i - <span class="number">1</span>] + arr[i - <span class="number">2</span>]</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">return</span> arr[n - <span class="number">1</span>]</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">console</span>.time(<span class="string">'c（1200）'</span>)</div><div class="line"><span class="built_in">console</span>.log(c(<span class="number">1200</span>))</div><div class="line"><span class="built_in">console</span>.timeEnd(<span class="string">'c（1200）'</span>)</div></pre></td></tr></table></figure><p>这样效率又进一步提高了不少：</p><p><img src="http://images2015.cnblogs.com/blog/604467/201701/604467-20170114151353213-1988265003.png" alt="image"></p><h4 id="4-直接使用数学表达式"><a href="#4-直接使用数学表达式" class="headerlink" title="4.直接使用数学表达式"></a>4.直接使用数学表达式</h4><p>从网上得出菲波那契数列是有数学表达式的：<br><img src="http://images2015.cnblogs.com/blog/604467/201701/604467-20170114151555010-1595503507.png" alt="image"><br></p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> d = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</div><div class="line">   <span class="keyword">return</span> (<span class="number">1</span>/(<span class="built_in">Math</span>.pow(<span class="number">5</span>, <span class="number">1</span>/<span class="number">2</span>))) * (<span class="built_in">Math</span>.pow((<span class="number">1</span> + <span class="built_in">Math</span>.pow(<span class="number">5</span>, <span class="number">1</span>/<span class="number">2</span>))/<span class="number">2</span>, n) - <span class="built_in">Math</span>.pow((<span class="number">1</span> - <span class="built_in">Math</span>.pow(<span class="number">5</span>, <span class="number">1</span>/<span class="number">2</span>))/<span class="number">2</span>, n))</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">console</span>.time(<span class="string">'d（1200）'</span>)</div><div class="line"><span class="built_in">console</span>.log(d(<span class="number">1200</span>))</div><div class="line"><span class="built_in">console</span>.timeEnd(<span class="string">'d（1200）'</span>)</div></pre></td></tr></table></figure><p></p><p>现在我们来看一下效果：<br><img src="http://images2015.cnblogs.com/blog/604467/201701/604467-20170114151947291-1309083018.png" alt="image"></p><hr><p>总结一下：以上方法都有利有弊，有人指出直接使用数学表达式会产生js计算精度问题，希望大家权衡考量，并且提出更好的建议。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;概序&quot;&gt;&lt;a href=&quot;#概序&quot; class=&quot;headerlink&quot; title=&quot;概序&quot;&gt;&lt;/a&gt;概序&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://baike.baidu.com/link?url=ef8VHJvyil7_nseAEM0WAAakbHfNbNZdWGe3JftuwxsTFcsfbwdNzTB-Lhl2LOwdOV-M5ixzxMEWFRlfw9qWlwo51mmA8-moGCaaFgvP0NOxdVSspc95wfvUasv5_1EEAbrz_FAeT5fdeT-3P7c2Ea&quot;&gt;菲波那契数列&lt;/a&gt;，大致可以描叙为a(n) = a(n-1) + a(n-2) (a &amp;gt; 2)。类似于这样&lt;code&gt;[1, 1, 2, 3, 5, 8, 13 ...]&lt;/code&gt;，下面我们用js来实现一下：&lt;/p&gt;&lt;hr&gt;&lt;h4 id=&quot;1-递归&quot;&gt;&lt;a href=&quot;#1-递归&quot; class=&quot;headerlink&quot; title=&quot;1.递归&quot;&gt;&lt;/a&gt;1.递归&lt;/h4&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (n === &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; || n === &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a(n - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) + a(n - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.time(&lt;span class=&quot;string&quot;&gt;&#39;a（44）&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a(&lt;span class=&quot;number&quot;&gt;44&lt;/span&gt;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.timeEnd(&lt;span class=&quot;string&quot;&gt;&#39;a（44）&#39;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;以上我们可以比较清晰的看出代码的思路，但是这种方法有一个致命的缺点：效率太差！&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/604467/201701/604467-20170114150610697-767833320.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;&lt;p&gt;执行到第44个的时候，已经不能接受了。需要5s多。那我们再来改进一下:&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://longyouwei.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Hello world</title>
    <link href="http://longyouwei.com/2017/03/25/Hello-world/"/>
    <id>http://longyouwei.com/2017/03/25/Hello-world/</id>
    <published>2017-03-24T17:03:41.000Z</published>
    <updated>2017-03-24T17:05:17.767Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这是我第一篇博客<br></p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(<span class="string">'Hello world'</span>)</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'我很帅'</span>)</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'深圳梁朝伟'</span>)</div></pre></td></tr></table></figure><p></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;这是我第一篇博客&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;
    
    </summary>
    
    
      <category term="other" scheme="http://longyouwei.com/tags/other/"/>
    
  </entry>
  
</feed>
